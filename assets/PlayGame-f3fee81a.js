class o extends Phaser.GameObjects.Sprite{constructor(t){const e=t.player.x,h=t.player.y;super(t,e,h,"laser"),t.add.existing(this),t.projectiles.add(this),t.physics.world.enableBody(this),this.body.velocity.y=-250}update(){this.y<32&&this.destroy()}}class r extends Phaser.GameObjects.Sprite{constructor(t,e,h){super(t,e,h,"explotion"),t.add.existing(this),this.play("explotion_anims"),t.explotionEffect.play()}}class p extends Phaser.Scene{constructor(){super("PlayGame")}create(){this.background=this.add.tileSprite(0,0,this.game.config.width,this.game.config.height,"background"),this.background.setOrigin(0,0),this.ship_1=this.add.sprite(70,100,"ship_1"),this.ship_2=this.add.sprite(130,100,"ship_2"),this.ship_3=this.add.sprite(189,100,"ship_3"),this.enemies=this.physics.add.group(),this.enemies.add(this.ship_1),this.enemies.add(this.ship_2),this.enemies.add(this.ship_3),this.ship_1.play("ship_1_anims"),this.ship_2.play("ship_2_anims"),this.ship_3.play("ship_3_anims"),this.ship_1.setInteractive(),this.ship_2.setInteractive(),this.ship_3.setInteractive(),this.input.on("gameobjectdown",this.destroyShip,this);var t=this.add.graphics();t.fillStyle("Black"),t.fillRect(0,0,this.game.config.width,20),this.score=0,this.scoreBoard=this.add.text(10,5,"SCORE",{fill:"yellow"},16);for(let i=0;i<=3;i++){var e=Phaser.Math.Between(0,800),h=Phaser.Math.Between(0,600);this.heart=this.add.sprite(e,h,"heart"),this.heart.setInteractive()}this.laserEffect=this.sound.add("laser_effect"),this.explotionEffect=this.sound.add("explotion_effect"),this.pickupEffect=this.sound.add("pickup_effect"),this.powerUps=this.physics.add.group();for(let i=0;i<=4;i++){const s=this.physics.add.sprite(16,16,"power-up");this.powerUps.add(s),s.setRandomPosition(0,0,this.game.config.width,this.game.config.height),Math.random()>.5?s.play("red"):s.play("grey"),s.setVelocity(100,100),s.setCollideWorldBounds(!0),s.setBounce(1)}this.player=this.physics.add.sprite(this.game.config.width/2-8,this.game.config.height-64,"player"),this.player.play("thrust"),this.player.setCollideWorldBounds(!0),this.cursorKeys=this.input.keyboard.createCursorKeys(),this.keyA=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A),this.keyS=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S),this.keyD=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.D),this.keyW=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.W),this.spacebar=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ENTER),this.projectiles=this.add.group(),this.physics.add.collider(this.projectiles,this.powerUps,(i,s)=>{i.destroy()}),this.physics.add.overlap(this.player,this.powerUps,(i,s)=>{s.disableBody(!0,!0),this.score+=1e3,this.scoreBoard.text="SCORE "+this.score||0},null,this),this.physics.add.overlap(this.player,this.enemies,this.hurtPlayer,null,this),this.physics.add.overlap(this.projectiles,this.enemies,(i,s)=>{new r(this,s.x,s.y),i.destroy(),this.resetShipPosition(s),this.score+=15,this.scoreBoard.text="SCORE "+this.score||0},null,this)}update(){this.moveShip(this.ship_1,1),this.moveShip(this.ship_2,2),this.moveShip(this.ship_3,3),this.background.tilePositionY-=.5,this.movePlayer(),Phaser.Input.Keyboard.JustDown(this.spacebar)&&this.player.active&&this.shootBeam();for(let t=0;t<this.projectiles.getChildren().length;t++)this.projectiles.getChildren()[t].update()}moveShip(t,e){t.y+=e,t.y>this.game.config.height&&this.resetShipPosition(t)}resetShipPosition(t){t.y=0;const e=this.game.config.width,h=Phaser.Math.Between(0,e);t.x=h}destroyShip(t,e){e.setTexture("explotion"),e.play("explotion_anims")}movePlayer(){this.keyA.isDown?this.player.setVelocityX(-200):this.keyS.isDown?this.player.setVelocityY(200):this.keyD.isDown?this.player.setVelocityX(200):this.keyW.isDown&&this.player.setVelocityY(-200)}shootBeam(){new o(this)}hurtPlayer(t,e){this.resetShipPosition(e),!(this.player.alpha<1)&&(new r(this,t.x,t.y),t.disableBody(!0,!0),this.score=0,this.scoreBoard.text="SCORE "+this.score||0,this.time.addEvent({delay:1e3,callback:this.resetPlayer,callbackScope:this,loop:!1}))}resetPlayer(){const t=this.game.config.width/2-8,e=this.game.config.height-64;this.player.enableBody(!0,t,e,!0,!0),this.player.alpha=.5,this.tweens.add({targets:this.player,y:this.game.config.height-64,ease:"Power1",duration:1200,repeat:0,onComplete:()=>{this.player.alpha=1},callbackScope:this})}addHeart(t,e){this.add.sprite(t,e,"heart")}}export{p as default};
